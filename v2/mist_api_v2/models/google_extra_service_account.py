# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class GoogleExtraServiceAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email=None, scopes=None):  # noqa: E501
        """GoogleExtraServiceAccount - a model defined in OpenAPI

        :param email: The email of this GoogleExtraServiceAccount.  # noqa: E501
        :type email: str
        :param scopes: The scopes of this GoogleExtraServiceAccount.  # noqa: E501
        :type scopes: List[str]
        """
        self.openapi_types = {
            'email': str,
            'scopes': List[str]
        }

        self.attribute_map = {
            'email': 'email',
            'scopes': 'scopes'
        }

        self._email = email
        self._scopes = scopes

    @classmethod
    def from_dict(cls, dikt) -> 'GoogleExtraServiceAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GoogleExtra_service_account of this GoogleExtraServiceAccount.  # noqa: E501
        :rtype: GoogleExtraServiceAccount
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this GoogleExtraServiceAccount.

        The email address of the service account.  # noqa: E501

        :return: The email of this GoogleExtraServiceAccount.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this GoogleExtraServiceAccount.

        The email address of the service account.  # noqa: E501

        :param email: The email of this GoogleExtraServiceAccount.
        :type email: str
        """

        self._email = email

    @property
    def scopes(self):
        """Gets the scopes of this GoogleExtraServiceAccount.

        A list of scopes to be made available for this machine.  # noqa: E501

        :return: The scopes of this GoogleExtraServiceAccount.
        :rtype: List[str]
        """
        return self._scopes

    @scopes.setter
    def scopes(self, scopes):
        """Sets the scopes of this GoogleExtraServiceAccount.

        A list of scopes to be made available for this machine.  # noqa: E501

        :param scopes: The scopes of this GoogleExtraServiceAccount.
        :type scopes: List[str]
        """

        self._scopes = scopes
