# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class EquinixCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apikey=None):  # noqa: E501
        """EquinixCredentials - a model defined in OpenAPI

        :param apikey: The apikey of this EquinixCredentials.  # noqa: E501
        :type apikey: str
        """
        self.openapi_types = {
            'apikey': str
        }

        self.attribute_map = {
            'apikey': 'apikey'
        }

        self._apikey = apikey

    @classmethod
    def from_dict(cls, dikt) -> 'EquinixCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EquinixCredentials of this EquinixCredentials.  # noqa: E501
        :rtype: EquinixCredentials
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apikey(self):
        """Gets the apikey of this EquinixCredentials.

        Your Equinix Metal API key  # noqa: E501

        :return: The apikey of this EquinixCredentials.
        :rtype: str
        """
        return self._apikey

    @apikey.setter
    def apikey(self, apikey):
        """Sets the apikey of this EquinixCredentials.

        Your Equinix Metal API key  # noqa: E501

        :param apikey: The apikey of this EquinixCredentials.
        :type apikey: str
        """
        if apikey is None:
            raise ValueError("Invalid value for `apikey`, must not be `None`")  # noqa: E501

        self._apikey = apikey
