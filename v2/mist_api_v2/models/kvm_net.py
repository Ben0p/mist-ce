# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2.models.kvm_net_networks import KVMNetNetworks
from mist_api_v2 import util

from mist_api_v2.models.kvm_net_networks import KVMNetNetworks  # noqa: E501

class KVMNet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, networks=None, vnfs=None):  # noqa: E501
        """KVMNet - a model defined in OpenAPI

        :param networks: The networks of this KVMNet.  # noqa: E501
        :type networks: List[KVMNetNetworks]
        :param vnfs: The vnfs of this KVMNet.  # noqa: E501
        :type vnfs: List[str]
        """
        self.openapi_types = {
            'networks': List[KVMNetNetworks],
            'vnfs': List[str]
        }

        self.attribute_map = {
            'networks': 'networks',
            'vnfs': 'vnfs'
        }

        self._networks = networks
        self._vnfs = vnfs

    @classmethod
    def from_dict(cls, dikt) -> 'KVMNet':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The KVMNet of this KVMNet.  # noqa: E501
        :rtype: KVMNet
        """
        return util.deserialize_model(dikt, cls)

    @property
    def networks(self):
        """Gets the networks of this KVMNet.


        :return: The networks of this KVMNet.
        :rtype: List[KVMNetNetworks]
        """
        return self._networks

    @networks.setter
    def networks(self, networks):
        """Sets the networks of this KVMNet.


        :param networks: The networks of this KVMNet.
        :type networks: List[KVMNetNetworks]
        """

        self._networks = networks

    @property
    def vnfs(self):
        """Gets the vnfs of this KVMNet.


        :return: The vnfs of this KVMNet.
        :rtype: List[str]
        """
        return self._vnfs

    @vnfs.setter
    def vnfs(self, vnfs):
        """Sets the vnfs of this KVMNet.


        :param vnfs: The vnfs of this KVMNet.
        :type vnfs: List[str]
        """

        self._vnfs = vnfs
