# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class DockerNet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, port_bindings=None):  # noqa: E501
        """DockerNet - a model defined in OpenAPI

        :param port_bindings: The port_bindings of this DockerNet.  # noqa: E501
        :type port_bindings: object
        """
        self.openapi_types = {
            'port_bindings': object
        }

        self.attribute_map = {
            'port_bindings': 'port_bindings'
        }

        self._port_bindings = port_bindings

    @classmethod
    def from_dict(cls, dikt) -> 'DockerNet':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DockerNet of this DockerNet.  # noqa: E501
        :rtype: DockerNet
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port_bindings(self):
        """Gets the port_bindings of this DockerNet.

        ContainerPort,HostPort pairs. For example \"80\"/\"80\", \"123/udp\"/\"123\"  # noqa: E501

        :return: The port_bindings of this DockerNet.
        :rtype: object
        """
        return self._port_bindings

    @port_bindings.setter
    def port_bindings(self, port_bindings):
        """Sets the port_bindings of this DockerNet.

        ContainerPort,HostPort pairs. For example \"80\"/\"80\", \"123/udp\"/\"123\"  # noqa: E501

        :param port_bindings: The port_bindings of this DockerNet.
        :type port_bindings: object
        """

        self._port_bindings = port_bindings
