# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class AmazonCreateMachineRequestNet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, security_group=None, subnet=None):  # noqa: E501
        """AmazonCreateMachineRequestNet - a model defined in OpenAPI

        :param security_group: The security_group of this AmazonCreateMachineRequestNet.  # noqa: E501
        :type security_group: str
        :param subnet: The subnet of this AmazonCreateMachineRequestNet.  # noqa: E501
        :type subnet: str
        """
        self.openapi_types = {
            'security_group': str,
            'subnet': str
        }

        self.attribute_map = {
            'security_group': 'security_group',
            'subnet': 'subnet'
        }

        self._security_group = security_group
        self._subnet = subnet

    @classmethod
    def from_dict(cls, dikt) -> 'AmazonCreateMachineRequestNet':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AmazonCreateMachineRequest_net of this AmazonCreateMachineRequestNet.  # noqa: E501
        :rtype: AmazonCreateMachineRequestNet
        """
        return util.deserialize_model(dikt, cls)

    @property
    def security_group(self):
        """Gets the security_group of this AmazonCreateMachineRequestNet.

        security group to assign to the machine  # noqa: E501

        :return: The security_group of this AmazonCreateMachineRequestNet.
        :rtype: str
        """
        return self._security_group

    @security_group.setter
    def security_group(self, security_group):
        """Sets the security_group of this AmazonCreateMachineRequestNet.

        security group to assign to the machine  # noqa: E501

        :param security_group: The security_group of this AmazonCreateMachineRequestNet.
        :type security_group: str
        """

        self._security_group = security_group

    @property
    def subnet(self):
        """Gets the subnet of this AmazonCreateMachineRequestNet.

        Name or id of the subnet to launch the machine into  # noqa: E501

        :return: The subnet of this AmazonCreateMachineRequestNet.
        :rtype: str
        """
        return self._subnet

    @subnet.setter
    def subnet(self, subnet):
        """Sets the subnet of this AmazonCreateMachineRequestNet.

        Name or id of the subnet to launch the machine into  # noqa: E501

        :param subnet: The subnet of this AmazonCreateMachineRequestNet.
        :type subnet: str
        """

        self._subnet = subnet
