# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class AlibabaCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apikey=None, apisecret=None, region=None):  # noqa: E501
        """AlibabaCredentials - a model defined in OpenAPI

        :param apikey: The apikey of this AlibabaCredentials.  # noqa: E501
        :type apikey: str
        :param apisecret: The apisecret of this AlibabaCredentials.  # noqa: E501
        :type apisecret: str
        :param region: The region of this AlibabaCredentials.  # noqa: E501
        :type region: str
        """
        self.openapi_types = {
            'apikey': str,
            'apisecret': str,
            'region': str
        }

        self.attribute_map = {
            'apikey': 'apikey',
            'apisecret': 'apisecret',
            'region': 'region'
        }

        self._apikey = apikey
        self._apisecret = apisecret
        self._region = region

    @classmethod
    def from_dict(cls, dikt) -> 'AlibabaCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlibabaCredentials of this AlibabaCredentials.  # noqa: E501
        :rtype: AlibabaCredentials
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apikey(self):
        """Gets the apikey of this AlibabaCredentials.

        Your Alibaba Cloud API key  # noqa: E501

        :return: The apikey of this AlibabaCredentials.
        :rtype: str
        """
        return self._apikey

    @apikey.setter
    def apikey(self, apikey):
        """Sets the apikey of this AlibabaCredentials.

        Your Alibaba Cloud API key  # noqa: E501

        :param apikey: The apikey of this AlibabaCredentials.
        :type apikey: str
        """
        if apikey is None:
            raise ValueError("Invalid value for `apikey`, must not be `None`")  # noqa: E501

        self._apikey = apikey

    @property
    def apisecret(self):
        """Gets the apisecret of this AlibabaCredentials.

        Your Alibaba Cloud API secret  # noqa: E501

        :return: The apisecret of this AlibabaCredentials.
        :rtype: str
        """
        return self._apisecret

    @apisecret.setter
    def apisecret(self, apisecret):
        """Sets the apisecret of this AlibabaCredentials.

        Your Alibaba Cloud API secret  # noqa: E501

        :param apisecret: The apisecret of this AlibabaCredentials.
        :type apisecret: str
        """
        if apisecret is None:
            raise ValueError("Invalid value for `apisecret`, must not be `None`")  # noqa: E501

        self._apisecret = apisecret

    @property
    def region(self):
        """Gets the region of this AlibabaCredentials.

        Your Alibaba Cloud region  # noqa: E501

        :return: The region of this AlibabaCredentials.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this AlibabaCredentials.

        Your Alibaba Cloud region  # noqa: E501

        :param region: The region of this AlibabaCredentials.
        :type region: str
        """
        if region is None:
            raise ValueError("Invalid value for `region`, must not be `None`")  # noqa: E501

        self._region = region
