# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2.models.org import Org
from mist_api_v2.models.user import User
from mist_api_v2 import util

from mist_api_v2.models.org import Org  # noqa: E501
from mist_api_v2.models.user import User  # noqa: E501

class AuthInfoData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user=None, orgs=None):  # noqa: E501
        """AuthInfoData - a model defined in OpenAPI

        :param user: The user of this AuthInfoData.  # noqa: E501
        :type user: User
        :param orgs: The orgs of this AuthInfoData.  # noqa: E501
        :type orgs: List[Org]
        """
        self.openapi_types = {
            'user': User,
            'orgs': List[Org]
        }

        self.attribute_map = {
            'user': 'user',
            'orgs': 'orgs'
        }

        self._user = user
        self._orgs = orgs

    @classmethod
    def from_dict(cls, dikt) -> 'AuthInfoData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuthInfo_data of this AuthInfoData.  # noqa: E501
        :rtype: AuthInfoData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user(self):
        """Gets the user of this AuthInfoData.


        :return: The user of this AuthInfoData.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this AuthInfoData.


        :param user: The user of this AuthInfoData.
        :type user: User
        """

        self._user = user

    @property
    def orgs(self):
        """Gets the orgs of this AuthInfoData.

        Orgs available in current authenticated session  # noqa: E501

        :return: The orgs of this AuthInfoData.
        :rtype: List[Org]
        """
        return self._orgs

    @orgs.setter
    def orgs(self, orgs):
        """Sets the orgs of this AuthInfoData.

        Orgs available in current authenticated session  # noqa: E501

        :param orgs: The orgs of this AuthInfoData.
        :type orgs: List[Org]
        """

        self._orgs = orgs
