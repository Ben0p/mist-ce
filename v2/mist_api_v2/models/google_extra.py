# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2.models.google_extra_service_account import GoogleExtraServiceAccount
from mist_api_v2 import util

from mist_api_v2.models.google_extra_service_account import GoogleExtraServiceAccount  # noqa: E501

class GoogleExtra(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_account=None):  # noqa: E501
        """GoogleExtra - a model defined in OpenAPI

        :param service_account: The service_account of this GoogleExtra.  # noqa: E501
        :type service_account: GoogleExtraServiceAccount
        """
        self.openapi_types = {
            'service_account': GoogleExtraServiceAccount
        }

        self.attribute_map = {
            'service_account': 'service_account'
        }

        self._service_account = service_account

    @classmethod
    def from_dict(cls, dikt) -> 'GoogleExtra':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GoogleExtra of this GoogleExtra.  # noqa: E501
        :rtype: GoogleExtra
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_account(self):
        """Gets the service_account of this GoogleExtra.


        :return: The service_account of this GoogleExtra.
        :rtype: GoogleExtraServiceAccount
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleExtra.


        :param service_account: The service_account of this GoogleExtra.
        :type service_account: GoogleExtraServiceAccount
        """

        self._service_account = service_account
