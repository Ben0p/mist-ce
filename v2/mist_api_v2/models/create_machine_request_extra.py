# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class CreateMachineRequestExtra(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_id=None, root_pass=None):  # noqa: E501
        """CreateMachineRequestExtra - a model defined in OpenAPI

        :param project_id: The project_id of this CreateMachineRequestExtra.  # noqa: E501
        :type project_id: str
        :param root_pass: The root_pass of this CreateMachineRequestExtra.  # noqa: E501
        :type root_pass: str
        """
        self.openapi_types = {
            'project_id': str,
            'root_pass': str
        }

        self.attribute_map = {
            'project_id': 'project_id',
            'root_pass': 'root_pass'
        }

        self._project_id = project_id
        self._root_pass = root_pass

    @classmethod
    def from_dict(cls, dikt) -> 'CreateMachineRequestExtra':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateMachineRequest_extra of this CreateMachineRequestExtra.  # noqa: E501
        :rtype: CreateMachineRequestExtra
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_id(self):
        """Gets the project_id of this CreateMachineRequestExtra.

        Equinix specific parameter. Project UUID, if not given the first one available will be selected  # noqa: E501

        :return: The project_id of this CreateMachineRequestExtra.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this CreateMachineRequestExtra.

        Equinix specific parameter. Project UUID, if not given the first one available will be selected  # noqa: E501

        :param project_id: The project_id of this CreateMachineRequestExtra.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def root_pass(self):
        """Gets the root_pass of this CreateMachineRequestExtra.

        Linode specific parameter. Set root password. If not given a secure password will be generated  # noqa: E501

        :return: The root_pass of this CreateMachineRequestExtra.
        :rtype: str
        """
        return self._root_pass

    @root_pass.setter
    def root_pass(self, root_pass):
        """Sets the root_pass of this CreateMachineRequestExtra.

        Linode specific parameter. Set root password. If not given a secure password will be generated  # noqa: E501

        :param root_pass: The root_pass of this CreateMachineRequestExtra.
        :type root_pass: str
        """

        self._root_pass = root_pass
