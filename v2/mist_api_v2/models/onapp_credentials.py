# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class OnappCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_url=None, username=None, apikey=None, host=None, verify=None):  # noqa: E501
        """OnappCredentials - a model defined in OpenAPI

        :param auth_url: The auth_url of this OnappCredentials.  # noqa: E501
        :type auth_url: str
        :param username: The username of this OnappCredentials.  # noqa: E501
        :type username: str
        :param apikey: The apikey of this OnappCredentials.  # noqa: E501
        :type apikey: str
        :param host: The host of this OnappCredentials.  # noqa: E501
        :type host: str
        :param verify: The verify of this OnappCredentials.  # noqa: E501
        :type verify: bool
        """
        self.openapi_types = {
            'auth_url': str,
            'username': str,
            'apikey': str,
            'host': str,
            'verify': bool
        }

        self.attribute_map = {
            'auth_url': 'authUrl',
            'username': 'username',
            'apikey': 'apikey',
            'host': 'host',
            'verify': 'verify'
        }

        self._auth_url = auth_url
        self._username = username
        self._apikey = apikey
        self._host = host
        self._verify = verify

    @classmethod
    def from_dict(cls, dikt) -> 'OnappCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OnappCredentials of this OnappCredentials.  # noqa: E501
        :rtype: OnappCredentials
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_url(self):
        """Gets the auth_url of this OnappCredentials.


        :return: The auth_url of this OnappCredentials.
        :rtype: str
        """
        return self._auth_url

    @auth_url.setter
    def auth_url(self, auth_url):
        """Sets the auth_url of this OnappCredentials.


        :param auth_url: The auth_url of this OnappCredentials.
        :type auth_url: str
        """

        self._auth_url = auth_url

    @property
    def username(self):
        """Gets the username of this OnappCredentials.


        :return: The username of this OnappCredentials.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this OnappCredentials.


        :param username: The username of this OnappCredentials.
        :type username: str
        """
        if username is None:
            raise ValueError("Invalid value for `username`, must not be `None`")  # noqa: E501

        self._username = username

    @property
    def apikey(self):
        """Gets the apikey of this OnappCredentials.


        :return: The apikey of this OnappCredentials.
        :rtype: str
        """
        return self._apikey

    @apikey.setter
    def apikey(self, apikey):
        """Sets the apikey of this OnappCredentials.


        :param apikey: The apikey of this OnappCredentials.
        :type apikey: str
        """
        if apikey is None:
            raise ValueError("Invalid value for `apikey`, must not be `None`")  # noqa: E501

        self._apikey = apikey

    @property
    def host(self):
        """Gets the host of this OnappCredentials.


        :return: The host of this OnappCredentials.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this OnappCredentials.


        :param host: The host of this OnappCredentials.
        :type host: str
        """
        if host is None:
            raise ValueError("Invalid value for `host`, must not be `None`")  # noqa: E501

        self._host = host

    @property
    def verify(self):
        """Gets the verify of this OnappCredentials.


        :return: The verify of this OnappCredentials.
        :rtype: bool
        """
        return self._verify

    @verify.setter
    def verify(self, verify):
        """Sets the verify of this OnappCredentials.


        :param verify: The verify of this OnappCredentials.
        :type verify: bool
        """

        self._verify = verify
