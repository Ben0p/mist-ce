# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class ExposeMachineRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, port_forwards=None):  # noqa: E501
        """ExposeMachineRequest - a model defined in OpenAPI

        :param port_forwards: The port_forwards of this ExposeMachineRequest.  # noqa: E501
        :type port_forwards: object
        """
        self.openapi_types = {
            'port_forwards': object
        }

        self.attribute_map = {
            'port_forwards': 'port_forwards'
        }

        self._port_forwards = port_forwards

    @classmethod
    def from_dict(cls, dikt) -> 'ExposeMachineRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExposeMachineRequest of this ExposeMachineRequest.  # noqa: E501
        :rtype: ExposeMachineRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port_forwards(self):
        """Gets the port_forwards of this ExposeMachineRequest.

        Applies only in GigG8 clouds  # noqa: E501

        :return: The port_forwards of this ExposeMachineRequest.
        :rtype: object
        """
        return self._port_forwards

    @port_forwards.setter
    def port_forwards(self, port_forwards):
        """Sets the port_forwards of this ExposeMachineRequest.

        Applies only in GigG8 clouds  # noqa: E501

        :param port_forwards: The port_forwards of this ExposeMachineRequest.
        :type port_forwards: object
        """
        if port_forwards is None:
            raise ValueError("Invalid value for `port_forwards`, must not be `None`")  # noqa: E501

        self._port_forwards = port_forwards
