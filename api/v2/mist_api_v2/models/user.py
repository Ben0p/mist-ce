# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email=None, id=None, first_name=None, last_name=None, last_login=None, username=None, registration_date=None):  # noqa: E501
        """User - a model defined in OpenAPI

        :param email: The email of this User.  # noqa: E501
        :type email: str
        :param id: The id of this User.  # noqa: E501
        :type id: str
        :param first_name: The first_name of this User.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this User.  # noqa: E501
        :type last_name: str
        :param last_login: The last_login of this User.  # noqa: E501
        :type last_login: str
        :param username: The username of this User.  # noqa: E501
        :type username: str
        :param registration_date: The registration_date of this User.  # noqa: E501
        :type registration_date: str
        """
        self.openapi_types = {
            'email': str,
            'id': str,
            'first_name': str,
            'last_name': str,
            'last_login': str,
            'username': str,
            'registration_date': str
        }

        self.attribute_map = {
            'email': 'email',
            'id': 'id',
            'first_name': 'first_name',
            'last_name': 'last_name',
            'last_login': 'last_login',
            'username': 'username',
            'registration_date': 'registration_date'
        }

        self._email = email
        self._id = id
        self._first_name = first_name
        self._last_name = last_name
        self._last_login = last_login
        self._username = username
        self._registration_date = registration_date

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: str
        """

        self._id = id

    @property
    def first_name(self):
        """Gets the first_name of this User.


        :return: The first_name of this User.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this User.


        :param first_name: The first_name of this User.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this User.


        :return: The last_name of this User.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this User.


        :param last_name: The last_name of this User.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def last_login(self):
        """Gets the last_login of this User.


        :return: The last_login of this User.
        :rtype: str
        """
        return self._last_login

    @last_login.setter
    def last_login(self, last_login):
        """Sets the last_login of this User.


        :param last_login: The last_login of this User.
        :type last_login: str
        """

        self._last_login = last_login

    @property
    def username(self):
        """Gets the username of this User.


        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this User.


        :param username: The username of this User.
        :type username: str
        """

        self._username = username

    @property
    def registration_date(self):
        """Gets the registration_date of this User.


        :return: The registration_date of this User.
        :rtype: str
        """
        return self._registration_date

    @registration_date.setter
    def registration_date(self, registration_date):
        """Sets the registration_date of this User.


        :param registration_date: The registration_date of this User.
        :type registration_date: str
        """

        self._registration_date = registration_date
