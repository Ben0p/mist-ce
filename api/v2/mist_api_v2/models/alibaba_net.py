# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class AlibabaNet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network=None, subnet=None, security_group=None):  # noqa: E501
        """AlibabaNet - a model defined in OpenAPI

        :param network: The network of this AlibabaNet.  # noqa: E501
        :type network: str
        :param subnet: The subnet of this AlibabaNet.  # noqa: E501
        :type subnet: str
        :param security_group: The security_group of this AlibabaNet.  # noqa: E501
        :type security_group: str
        """
        self.openapi_types = {
            'network': str,
            'subnet': str,
            'security_group': str
        }

        self.attribute_map = {
            'network': 'network',
            'subnet': 'subnet',
            'security_group': 'security_group'
        }

        self._network = network
        self._subnet = subnet
        self._security_group = security_group

    @classmethod
    def from_dict(cls, dikt) -> 'AlibabaNet':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlibabaNet of this AlibabaNet.  # noqa: E501
        :rtype: AlibabaNet
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network(self):
        """Gets the network of this AlibabaNet.

        Name or ID of an existing network to associate the machine with. If not provided, one existing network will be selected.  # noqa: E501

        :return: The network of this AlibabaNet.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this AlibabaNet.

        Name or ID of an existing network to associate the machine with. If not provided, one existing network will be selected.  # noqa: E501

        :param network: The network of this AlibabaNet.
        :type network: str
        """

        self._network = network

    @property
    def subnet(self):
        """Gets the subnet of this AlibabaNet.

        Name or ID of an existing or new subnet(switch) to launch the machine into. If not provided a default 'mistio' subnet will be created.  # noqa: E501

        :return: The subnet of this AlibabaNet.
        :rtype: str
        """
        return self._subnet

    @subnet.setter
    def subnet(self, subnet):
        """Sets the subnet of this AlibabaNet.

        Name or ID of an existing or new subnet(switch) to launch the machine into. If not provided a default 'mistio' subnet will be created.  # noqa: E501

        :param subnet: The subnet of this AlibabaNet.
        :type subnet: str
        """

        self._subnet = subnet

    @property
    def security_group(self):
        """Gets the security_group of this AlibabaNet.

        Name of the security group to assign to the machine. If not provided a default 'mistio' security group will be created.  # noqa: E501

        :return: The security_group of this AlibabaNet.
        :rtype: str
        """
        return self._security_group

    @security_group.setter
    def security_group(self, security_group):
        """Sets the security_group of this AlibabaNet.

        Name of the security group to assign to the machine. If not provided a default 'mistio' security group will be created.  # noqa: E501

        :param security_group: The security_group of this AlibabaNet.
        :type security_group: str
        """

        self._security_group = security_group
