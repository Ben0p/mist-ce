name: CI

on:
  push:
    branches:
     - master
  # pull_request:
  workflow_dispatch:

env:
  IMAGE_BASE: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    name: Build container images
    runs-on: ubuntu-latest
    env:
      GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          submodules: recursive

      - name: Log in to GitHub Container Registry
        run: |
          if [[ -z "$GHCR_TOKEN" ]]; then
            export GHCR_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          fi
          echo "${GHCR_TOKEN}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build all images
        run: |
          set -e

          # Set the registry and tag variables used in the compose file.
          export IMG_REGISTRY="${IMAGE_BASE}"
          echo "IMG_REGISTRY=$IMG_REGISTRY"
          export IMG_TAG="${GITHUB_REF##*/}"
          export GIT_TAG=$(git describe --exact-match --tags $(git log -n1 --pretty='%h'))
          if [ "$GIT_TAG" ]; then
            export IMG_TAG=$GIT_TAG
          fi
          echo "IMG_TAG=$IMG_TAG"
          export CONF_DIR=/etc/mist

          docker compose build
          docker compose push

  compose:
    name: Generate Compose File
    runs-on: ubuntu-latest
    env:
      IMAGE_BASE: ghcr.io/${{ github.repository_owner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Install gettext for envsubst
        run: |
          sudo apt-get update && sudo apt-get install -y gettext

      - name: Generate docker-compose file
        run: |
          set -e

          mkdir -p artifacts
          # Set the registry and tag variables used in the compose file.
          export IMG_REGISTRY="${IMAGE_BASE}"
          echo "IMG_REGISTRY=$IMG_REGISTRY"
          export IMG_TAG="${GITHUB_REF##*/}"
          export GIT_TAG=$(git describe --exact-match --tags $(git log -n1 --pretty='%h'))
          if [ "$GIT_TAG" ]; then
            export IMG_TAG=$GIT_TAG
          fi
          echo "IMG_TAG=$IMG_TAG"
          export CONF_DIR=/etc/mist
          envsubst < docker-compose.yml > artifacts/docker-compose.yml

      - name: Upload docker-compose artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose
          path: artifacts/docker-compose.yml
